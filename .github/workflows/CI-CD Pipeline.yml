# This is a basic workflow to help you get started with Actions

name: CICD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - develop
      - main
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.]

      # - name: Send Discord Bot Alert on Deployment Success
      #   if: failure()
      #   run: |
      #     curl -X POST "https://discord.com/api/v9/channels/${{ secrets.DISCORD_CHANNEL_ID }}/messages" \
      #     -H "Authorization: Bot ${{ secrets.DISCORD_BOT_TOKEN }}" \
      #     -H "Content-Type: application/json" \
      #     -d '{"content": "Deployment to '${{ github.ref }}' was successful. Image: my-app:'${{ github.sha }}'"}'

      - name: Test message
        if: success()
        run: |
          curl -v \
          -H "Authorization: Bot ${{ secrets.DISCORD_BOT_TOKEN }}" \
          -H "User-Agent: myBotThing (http://some.url, v0.1)" \
          -H "Content-Type: application/json" \
          -X POST \
          -d '{"content":"Deployment to '${{ github.ref }}' was successful. Image: my-app:'${{ github.sha }}'"}' \
          https://discordapp.com/api/channels/${{ secrets.DISCORD_CHANNEL_ID }}/messages
          
    
